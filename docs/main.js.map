{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/track-stock/track-stock.component.ts","./src/app/components/track-stock/track-stock.component.html","./src/app/services/local-storage.service.ts","./src/app/utils/Utils.ts","./src/app/components/track-stock-list-item/track-stock-list-item.component.ts","./src/app/components/track-stock-list-item/track-stock-list-item.component.html","./src/app/components/track-stock-list/track-stock-list.component.ts","./src/app/components/track-stock-list/track-stock-list.component.html","./src/app/components/sentiment-details/sentiment-details.component.ts","./src/app/components/sentiment-details/sentiment-details.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/services/date-utils.service.ts","./src/app/services/tracking-api.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators} from '@angular/forms';\nimport { TrackingApiService } from '../../services/tracking-api.service';\n\n@Component({\n  selector: 'app-track-stock',\n  templateUrl: './track-stock.component.html',\n  styleUrls: ['./track-stock.component.scss']\n})\nexport class TrackStockComponent implements OnInit {\n  public trackStockForm = this.formBuilder.group({\n    symbol: ['', [Validators.required]],\n  });\n\n\n  constructor(private readonly formBuilder: FormBuilder, private readonly trackingApiService: TrackingApiService) { }\n\n  ngOnInit(): void {\n  }\n\n  public trackStock(): void {\n    this.trackingApiService.addNewSymbol(this.trackStockForm.controls['symbol'].value.toUpperCase());\n    this.trackStockForm.reset();\n  }\n\n\n}\n","<div class=\"card\">\n  <h6>Enter the symbol of a stock to track (i.e. AAPL, TSLA, GOOGL)</h6>\n  <form [formGroup]=\"trackStockForm\" (ngSubmit)=\"trackStock()\">\n    <input id=\"stockInput\" formControlName=\"symbol\" />\n    <button type=\"submit\" class=\"btn btn-secondary\" id=\"trackBtn\" [disabled]=\"trackStockForm.invalid\" >Track Stock</button>\n  </form>\n</div>\n\n<app-track-stock-list></app-track-stock-list>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  public setStorageItem(key, value: any): void {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  public getStorageItem(key): string[] {\n    const item = localStorage.getItem(key);\n    return !!item ? JSON.parse(item): item;\n  }\n\n  public removeItemFromStorage(item): void {\n    localStorage.removeItem(item);\n  }\n}\n","export const QUOTES = 'quote';\r\nexport const COMPANY = '/stock/profile2';\r\nexport const SENTIMENT_TRACKING = '/stock/insider-sentiment';\r\nexport const STORAGE_TRACKING_KEY = 'STOCK_SYMBOLS';\r\nexport const STORAGE_COMPANY = 'ACTIVE_COMPANY';\r\nexport const URL = 'https://finnhub.io/api/v1/';\r\nexport const ACCESS_TOKEN = 'bu4f8kn48v6uehqi3cqg';\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Stock } from '../../models/Stock';\nimport { TrackingApiService } from '../../services/tracking-api.service';\n\n@Component({\n  selector: 'app-track-stock-list-item',\n  templateUrl: './track-stock-list-item.component.html',\n  styleUrls: ['./track-stock-list-item.component.scss']\n})\nexport class TrackStockListItemComponent implements OnInit {\n  @Input() public currentStock: Stock;\n\n  @Output() private removeStock: EventEmitter<Stock> = new EventEmitter();\n\n  constructor(private router: Router, private trackingApiService: TrackingApiService) { }\n\n  public ngOnInit(): void {\n  }\n\n  public removeItem(): void {\n    this.removeStock.emit(this.currentStock);\n  }\n\n  public navigateToSentimentDetails(): void {\n    this.trackingApiService.setActiveCompanyName(this.currentStock.name);\n    this.router.navigateByUrl(`sentiment/${this.currentStock.id}`);\n  }\n\n  public isIncreasing(stock) {\n    return stock > 0;\n  }\n}\n","<div class=\"card row\">\n  <div class=\"col-12\">\n    <div class=\"row card-header\">\n      <div class=\"col-11\">\n        <h3>{{currentStock.name}} ({{currentStock.id }})</h3>\n      </div>\n      <div class=\"col-1\">\n        <button type=\"button\" class=\"btn-close\" [id]=\"'remove' + currentStock.id\" aria-label=\"Close\" (click)=\"removeItem()\"></button>\n      </div>\n    </div>\n    <div class=\"card-body\">\n      <div class=\"row\">\n        <div class=\"col-4\">\n          Changed today:\n          <span *ngIf=\"isIncreasing(currentStock.quote.d)\">+</span>\n          <span *ngIf=\"!isIncreasing(currentStock.quote.d)\">-</span>\n          {{ currentStock.quote.d | percent }}\n        </div>\n        <div class=\"col-4\">\n          Opening price: {{ currentStock.quote.o | currency }}\n        </div>\n        <div class=\"col-3\">\n          <em *ngIf=\"isIncreasing(currentStock.quote.d)\"  class=\"icon-up\">\n            &#x2191;\n          </em>\n          <em *ngIf=\"!isIncreasing(currentStock.quote.d)\"  class=\"icon-down\">\n            &#x2193;\n          </em>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-4\">\n          Current Price: {{ currentStock.quote.c | currency }}\n        </div>\n        <div class=\"col-4\">\n          High Price: {{ currentStock.quote.h | currency }}\n        </div>\n      </div>\n    </div>\n  </div>\n<button class=\"btn btn-primary\" [id]=\"'sentiment' + currentStock.id\" (click)=\"navigateToSentimentDetails()\">Go to social sentiment details <em class=\"icon\">&#x2192;</em></button>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { Stock } from '../../models/Stock';\nimport { TrackingApiService } from '../../services/tracking-api.service';\n\n@Component({\n  selector: 'app-track-stock-list',\n  templateUrl: './track-stock-list.component.html',\n  styleUrls: ['./track-stock-list.component.scss']\n})\nexport class TrackStockListComponent implements OnInit, OnDestroy {\n  public stocks: Stock[] = [];\n  public loadedItems = false;\n\n  private unsubscribe = new Subject();\n\n  constructor(private trackingApiService: TrackingApiService) {\n    this.trackingApiService.addedSymbol$().pipe(takeUntil(this.unsubscribe)).subscribe((symbol: string) => {\n      if(symbol) {\n        this.addStock(symbol);\n      } else {\n        trackingApiService.openSnackBar('Symbol already added in list', 'Dismiss')\n      }\n    }, (error) => {\n      this.trackingApiService.openSnackBar(`Internal Server Error`, 'Cancel');\n    })\n  }\n\n  public ngOnInit(): void {\n    this.restoreFromLocalStorage();\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  public addStock(symbol): void {\n    this.loadedItems = false;\n    this.trackingApiService.getStock$(symbol).pipe(takeUntil(this.unsubscribe)).subscribe((stock: Stock) => {\n      this.loadedItems = true;\n      if(!!stock.name) {\n        this.stocks.push(stock);\n      } else {\n        this.trackingApiService.openSnackBar(`Data not found for the symbol ${symbol}`, 'Ok');\n      }\n    }, (error) => {\n      this.loadedItems = true;\n      this.trackingApiService.openSnackBar(`Internal Server Error`, 'Cancel');\n    })\n  }\n\n  public removeStock($event): void {\n    let index: number = this.stocks.indexOf($event);\n    this.stocks.splice(index, 1);\n    this.trackingApiService.removeSymbolFromStorage($event.symbol);\n  }\n\n  private restoreFromLocalStorage(): void {\n    this.loadedItems = false;\n    const symbols = this.trackingApiService.getSymbolsFromStorage();\n    symbols.forEach(symbol => {\n      this.addStock(symbol);\n    });\n    this.loadedItems = true;\n  }\n\n}\n","<mat-progress-spinner *ngIf=\"!loadedItems\" [mode]=\"'indeterminate'\"></mat-progress-spinner>\n<ng-container *ngIf=\"this.stocks.length > 0\">\n  <app-track-stock-list-item *ngFor=\"let stock of stocks; i as index\" [currentStock]=\"stock\" (removeStock)=\"removeStock($event)\"></app-track-stock-list-item>\n</ng-container>\n","import { Location } from '@angular/common';\nimport { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { SentimentTracking } from '../../models/SentimentTracking';\nimport { TrackingApiService } from '../../services/tracking-api.service';\n\n@Component({\n  selector: 'app-sentiment-details',\n  templateUrl: './sentiment-details.component.html',\n  styleUrls: ['./sentiment-details.component.scss']\n})\nexport class SentimentDetailsComponent implements OnInit, OnDestroy {\n  public trackedHistory: SentimentTracking;\n  public loaded = false;\n  private unsubscribe = new Subject();\n\n  constructor(private readonly router: Router,  private readonly activatedRouted: ActivatedRoute, private readonly location: Location, private readonly trackingApiService: TrackingApiService) {\n    this.getSentimentTrackingHistory(this.activatedRouted.snapshot.paramMap.get('symbol'));\n   }\n\n  public ngOnInit(): void {\n  }\n\n  public ngOnDestroy(): void {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n  public navigateBack(): void {\n    //OPTION 1:\n    this.location.back();\n    //OPTION 2:\n    //this.router.navigateByUrl('');\n  }\n\n  public getSentimentTrackingHistory(symbol: string) {\n    this.trackingApiService.getSentimentTrackingHistory$(symbol).subscribe(history => {\n      this.trackedHistory = {\n        company: this.trackingApiService.getActiveCompany(),\n        symbol: symbol,\n        sentimentHistory: history\n      }\n    }, (error) => {\n      this.trackingApiService.openSnackBar(`Internal Server Error`, 'Cancel');\n    })\n  }\n\n  public getMonthName(monthIndex: number): string {\n    return this.trackingApiService.getMonthName(monthIndex);\n  }\n\n  public isTrackChangeIncrease(value: number) {\n    return value > 0;\n  }\n}\n","<ng-container *ngIf=\"trackedHistory\">\n<div class=\"card\">\n  <div class=\"col-12\">\n    <h4> {{trackedHistory.company}} ({{trackedHistory.symbol}})</h4>\n  </div>\n  <div class=\"row\">\n  <div *ngFor=\"let trackedMonth of trackedHistory.sentimentHistory\" class=\"col-4\">\n\n      <p>{{getMonthName(trackedMonth.month)}}</p>\n      <p>Change: <span *ngIf=\"isTrackChangeIncrease(trackedMonth.change)\">+</span>\n        {{trackedMonth.change}}<p>\n      <p>MSPR: {{trackedMonth.mspr}}</p>\n\n      <em *ngIf=\"isTrackChangeIncrease(trackedMonth.change)\" class=\"icon-up\">\n        &#x2191;\n      </em>\n      <em *ngIf=\"!isTrackChangeIncrease(trackedMonth.change)\"  class=\"icon-down\">\n        &#x2193;\n      </em>\n  </div>\n</div>\n</div>\n<button id=\"backBtn\" class=\"btn btn-primary\" (click)=\"navigateBack()\" >\n  <em></em>\n  &#x2190; Back to list of stocks\n</button>\n</ng-container>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'stock-tracker-app';\n}\n","<router-outlet></router-outlet>\n","import {HttpClientModule} from '@angular/common/http';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {TrackStockComponent} from './components/track-stock/track-stock.component';\nimport {TrackStockListComponent} from './components/track-stock-list/track-stock-list.component';\nimport {TrackStockListItemComponent} from './components/track-stock-list-item/track-stock-list-item.component';\nimport {SentimentDetailsComponent} from './components/sentiment-details/sentiment-details.component';\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TrackStockComponent,\n    TrackStockListComponent,\n    TrackStockListItemComponent,\n    SentimentDetailsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NoopAnimationsModule,\n    MatProgressSpinnerModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DateUtilsService {\n\n  constructor() { }\n\n  public getDateForMonth(monthNumber: number): string {\n    return this.getDate(monthNumber).toISOString().slice(0, 10);\n  }\n\n  public maptoMonthName(monthNumber) {\n   return this.getMonths()[monthNumber].toUpperCase();\n  }\n\n  private getMonths(): string[] {\n    return ['January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December']\n  }\n\n  private getDate(monthNumber): Date {\n    return new Date(\n      new Date().getFullYear(),\n      new Date().getMonth() - monthNumber,\n      new Date().getDate()\n  )\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {combineLatest, Observable, Subject} from 'rxjs';\nimport { LocalStorageService } from './local-storage.service';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { ACCESS_TOKEN, COMPANY, QUOTES, SENTIMENT_TRACKING, STORAGE_COMPANY, STORAGE_TRACKING_KEY, URL } from '../utils/Utils';\nimport { Quote } from '../models/Quote';\nimport {map} from 'rxjs/operators';\nimport { Stock } from '../models/Stock';\nimport { Sentiment } from '../models/Sentiment';\nimport { DateUtilsService } from './date-utils.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TrackingApiService {\n  private symbols: string[] = [];\n  private _addedSymbol: Subject<string> = new Subject<string>();\n\n  constructor(private readonly localStorageService: LocalStorageService, private httpClient: HttpClient, private dateUtils: DateUtilsService, private snackBar: MatSnackBar) { }\n\n  public addNewSymbol(symbol: string): void {\n    this.symbols = this.getSymbolsFromStorage();\n    const foundSymbol = this.symbols?.find(item => item?.toLowerCase() === symbol.toLowerCase());\n    if(!foundSymbol) {\n      this.symbols.push(symbol);\n      this._addedSymbol.next(symbol);\n      this.localStorageService.setStorageItem(STORAGE_TRACKING_KEY, this.symbols);\n    } else {\n      this._addedSymbol.next(null);\n    }\n  }\n\n  public addedSymbol$(): Observable<string> {\n    return this._addedSymbol.asObservable();\n  }\n\n  public getSymbolsFromStorage(): string[] | [] {\n    const foundSymbols = this.localStorageService.getStorageItem(STORAGE_TRACKING_KEY);\n    return !!foundSymbols ? foundSymbols: [];\n  }\n\n  public removeSymbolFromStorage(symbol: string): void {\n    const trackedSymbols = this.getSymbolsFromStorage();\n    const trackIndex = trackedSymbols.findIndex(item => item === symbol);\n    trackedSymbols.splice(trackIndex, 1);\n    this.localStorageService.setStorageItem(STORAGE_TRACKING_KEY, trackedSymbols);\n  }\n\n  public getQuote$(trackedSymbol: string): Observable<Quote> {\n    let params = this.appendToken();\n    params = params.append('symbol', trackedSymbol);\n    return this.httpClient.get<Quote>(`${URL}${QUOTES}`, {params: params});\n  }\n\n  public getCompany$(trackedSymbol: string): Observable<string> {\n    let params = this.appendToken();\n    params = params.append('symbol', trackedSymbol);\n    return this.httpClient.get<string>(`${URL}${COMPANY}`, {params: params})\n  }\n\n  public getStock$(trackedSymbol: string): Observable<Stock> {\n    return combineLatest([this.getQuote$(trackedSymbol), this.getCompany$(trackedSymbol)])\n    .pipe(map(([quote, company]) => {\n       return {\n        id: trackedSymbol,\n        name: company['name'],\n        symbol: trackedSymbol,\n        quote: quote\n      } as Stock}));\n  }\n\n  public setActiveCompanyName(value: string): void {\n    this.localStorageService.setStorageItem(STORAGE_COMPANY, value);\n  }\n\n  public getActiveCompany():  string {\n    return this.localStorageService.getStorageItem(STORAGE_COMPANY)?.toString();\n  }\n\n  public getSentimentTrackingHistory$(trackedSymbol: string):Observable<Sentiment[]> {\n    let params = this.appendToken();\n    params = params.append('from', this.dateUtils.getDateForMonth(3));\n    params = params.append('to', this.dateUtils.getDateForMonth(1));\n    params = params.append('symbol', trackedSymbol);\n\n    return this.httpClient.get<Sentiment[]>(`${URL}${SENTIMENT_TRACKING}`, {params: params}).pipe(map(item => item[\"data\"]));\n  }\n\n  public getMonthName(monthIndex: number): string {\n    return this.dateUtils.maptoMonthName(monthIndex);\n  }\n\n  public openSnackBar(message: string, action: string) {\n    this.snackBar.open(message, action, { duration: 5000 });\n  }\n\n  private appendToken(): HttpParams {\n    let params = new HttpParams();\n    params = params.append('token', ACCESS_TOKEN);\n    return params;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SentimentDetailsComponent } from './components/sentiment-details/sentiment-details.component';\nimport { TrackStockComponent } from './components/track-stock/track-stock.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'track-stock' },\n  { path: '', component: TrackStockComponent },\n  {path: 'sentiment/:symbol', component: SentimentDetailsComponent},\n  { path: '**', component: TrackStockComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}